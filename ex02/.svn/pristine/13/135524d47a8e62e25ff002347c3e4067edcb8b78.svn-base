package com.momtenting.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.momtenting.domain.BoardVo;
import com.momtenting.domain.Criteria;
import com.momtenting.domain.PageDTO;
import com.momtenting.service.BoardService;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Log4j
@Controller
@RequestMapping("/board/*")
@AllArgsConstructor
public class BoardController {

	private BoardService service;
	
	@GetMapping("list")
	public void list(Criteria cri, Model model) {
		log.info("list....");
		model.addAttribute("list", service.getList(cri));
		model.addAttribute("pageMaker", new PageDTO(cri, service.getTotal(cri)));
	}
	
	@GetMapping({"get", "modify"})
	public void get(@RequestParam("bno") Long bno ,@ModelAttribute("cri") Criteria cri, Model model) {
		log.info("get or modify....");
		model.addAttribute("board", service.get(bno));
		model.addAttribute("cri", cri);
	}
	
	@GetMapping("register")
	public void register(){
		
	}
	
	@PostMapping("register")
	public String register(BoardVo boardVo, RedirectAttributes rttr) {
		log.info("register....");
		service.register(boardVo);
		rttr.addFlashAttribute("result", boardVo.getBno());
		
		return "redirect:/board/list";
	}
	
	@PostMapping("modify")
	public String modify(BoardVo boardVo, @ModelAttribute("cri") Criteria cri, RedirectAttributes rttr) {
		log.info("modify....");
		if(service.modify(boardVo)) {
			rttr.addFlashAttribute("result", "success");	
		}
		return "redirect:/board/list" + cri.getListLink();
	}
	
	@PostMapping("remove")
	public String remove(@RequestParam("bno") Long bno, @ModelAttribute("cri") Criteria cri, RedirectAttributes rttr) {
		log.info("remove....");
		if(service.remove(bno)) {
			rttr.addFlashAttribute("result","success");	
		}
		return "redirect:/board/list" + cri.getListLink();
	}
	
	

}
